version: '3.8'

services:
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: 'no'
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - proxy
    command: certonly --webroot -w /var/www/certbot --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN} --agree-tos
  proxy:
    container_name: proxy
    image: nginx:mainline
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    environment:
      - NGINX_SERVERNAME: ${NGINX_SERVERNAME}
    networks:
      - main
      - internet
    depends_on:
      - frontend
      - backend
  frontend:
    container_name: frontend
    restart: always
    build:
      context: ../frontend
      dockerfile: ../prod-config/Dockerfile.frontend
      args:
        BACKEND_URL: ${BACKEND_URL}
        FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - '3000:3000'
    networks:
      - main
    depends_on:
      - backend
  backend:
    container_name: backend
    restart: always
    build:
      context: ../backend
      dockerfile: ../prod-config/Dockerfile.backend
    ports:
      - '4200:4200'
    environment:
      PORT: 4200
      HOST: backend
      CLIENT_URL: ${FRONTEND_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRES: ${JWT_ACCESS_EXPIRES}
      DATABASE_URL: postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME}?schema=public
      MAILER_USERNAME: ${MAILER_USERNAME}
      MAILER_PASSWORD: ${MAILER_PASSWORD}
      MAILER_HOST: ${MAILER_HOST}
      MAILER_PORT: ${MAILER_PORT}
      MAILER_FROM: ${MAILER_FROM}
    networks:
      - main
    depends_on:
      - db
  db:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - main
      - internet

networks:
  main:
    internal: true
  internet:
volumes:
  db:
